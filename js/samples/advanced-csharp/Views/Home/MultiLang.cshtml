<!-- Copyright (c) Microsoft Corporation. All rights reserved.
     Licensed under the MIT License. -->
﻿@{
    var token = ViewData["Token"] as string;
    var subdomain = ViewData["Subdomain"] as string;
}

<!doctype html>
<html>
<head>
    <meta charset='utf-8'>
    <title>Immersive Reader Example: Document</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=" crossorigin="anonymous"></script>
    <script type='text/javascript' src='https://ircdname.azureedge.net/immersivereadersdk/immersive-reader-sdk.1.4.0.js'></script>
    <script type='text/javascript' src='~/js/helpers.js'></script>

    <link href='~/css/styles.css' rel='stylesheet'>
    <link href='~/css/buttons.css' rel='stylesheet'>

    <script type='text/javascript'>
        var Canary = '@Html.Raw(ViewData["Canary"])';
    </script>

    <style type='text/css'>

        #ContentArea {
            margin: 0 auto;
            position: relative;
            width: 100%;
        }

        #IRContent {
            margin: 0 100px;
        }
    </style>
</head>
<body>
    <nav>
        Examples:
        <a href='@Url.Action("Index", "Home")' class='active'>Sections</a>
        <a href='@Url.Action("Document", "Home")'>Document</a>
        <a href='@Url.Action("MultiLang", "Home")'>Multilingual Document</a>
        <a href='@Url.Action("UILangs", "Home")'>UI Language</a>
        <a href='@Url.Action("Math", "Home")'>Math</a>
        <a href='@Url.Action("WordDoc", "Home")'>Word Document</a>
        <a href='@Url.Action("Options", "Home")'>Options</a>
    </nav>

    <header class='ir-button-area' style='padding-left: 100px'>
        <div class='immersive-reader-button' data-button-style='iconAndText' onclick='handleLaunchImmersiveReader()'></div>
    </header>
    <main id='ContentArea'>
        <article id='IRContent'>
            <h1 id='IrTitle'>Multilingual Document</h1>
            <p id='IrText0' ir-lang='en-en'>
                Learning Tools Immersive Reader creates a reading experience that adds accessibility and comprehension for learners of all ages and abilities.
            </p>
            <p id='IrText1' ir-lang='en-en'>
                The Immersive Reader is available in many languages.
            </p>
            <p id='IrText2' ir-lang='es-es'>
                El Lector inmersivo está disponible en varios idiomas.
            </p>
            <p id='IrText3' ir-lang='fr-fr'>
                Le lecteur immersif est disponible dans de nombreuses langues.
            </p>
            <p id='IrText4' ir-lang='de-DE'>
                Der plastische Reader ist in vielen Sprachen verfügbar.
            </p>
        </article>
    </main>

    <script type='text/javascript'>
        async function handleLaunchImmersiveReader() {
            var title = $('#IrTitle').text().trim();

            var chunks = [];
            for (var i = 0; i < 5; i++) {
                var chunkP = $('#IrText' + i);
                var langChunkText = chunkP.text().trim();
                var chunkLang = chunkP.attr('ir-lang');

                chunks.push({
                    content: langChunkText,
                    lang: chunkLang
                });

                // Add a chunk of text to make a new line between chunks
                chunks.push({
                    content: '\n',
                    lang: 'en'
                });
            }

            const data = {
                title: title,
                chunks: chunks
            };

            let token = "@token";
            const subdomain = "@subdomain";

            // Learn more about options https://docs.microsoft.com/azure/cognitive-services/immersive-reader/reference#options
            const options = {
                onExit: exitCallback
            };

            await ImmersiveReader.launchAsync(token, subdomain, data, options)
                .then(() => {
                    console.log('Successful launch.');
                })
                .catch ((e) => {
                    alert('Error in launching the Immersive Reader. Check the console.');
                    console.log(e);
                });
        }

        function exitCallback() {
            console.log('This is the callback function. It is executed when the Immersive Reader closes.');
        }
    </script>
</body>
</html>